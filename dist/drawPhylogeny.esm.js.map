{"version":3,"file":"drawPhylogeny.esm.js","sources":["../src/radial/polarToCartesian.js","../src/radial/describeArc.js","../src/radial/describeArcSweep.js","../src/utils/preorder.js","../src/utils/fortify.js","../src/radial/radialData.js","../src/radial/getRadii.js","../src/radial/getRadiiFromPd.js","../src/radial/getArcs.js","../src/radial/getArcsFan.js","../src/radial/fanAngles.js","../src/radial/getChildArcs.js","../src/radial/radialLayout.js","../src/utils/mean.js","../src/rectangle/getHorizontal.js","../src/rectangle/getVertical.js","../src/rectangle/getChildVerticals.js","../src/rectangle/rectangleLayout.js","../src/utils/edges.js","../src/utils/numTips.js","../src/unrooted/equalAngleLayout.js","../src/unrooted/unrooted.js","../src/utils/readTree.js","../src/plot/drawPhylogeny.js"],"sourcesContent":["// src/radial/polarToCartesian.js\nexport default function (cx, cy, r, t) {\n  return { x: cx + r * Math.cos(t), y: cy - r * Math.sin(t) };\n}\n","import polarToCartesian from \"./polarToCartesian.js\";\n\n/**\n * Draw the shortest arc between startAngle and endAngle (radians), CCW.\n * If the CW path is shorter, swap start/end so the CCW path is still shortest.\n * Works with Y-inverted screen coords (polarToCartesian already inverts Y).\n */\nexport default function describeArc(cx, cy, radius, startAngle, endAngle) {\n  const TAU = Math.PI * 2;\n  const norm = (t) => ((t % TAU) + TAU) % TAU;\n  let a0 = norm(startAngle);\n  let a1 = norm(endAngle);\n\n  // CCW and CW spans\n  const ccw = (a1 - a0 + TAU) % TAU;\n  const cw = (a0 - a1 + TAU) % TAU;\n\n  // Ensure we always take the shorter span *in CCW* by swapping if needed\n  if (cw < ccw) {\n    const tmp = a0; a0 = a1; a1 = tmp;\n  }\n\n  const delta = (a1 - a0 + TAU) % TAU;          // now the shorter CCW span\n  if (delta < 1e-9) {\n    const p = polarToCartesian(cx, cy, radius, a0);\n    return `M ${p.x} ${p.y}`;                   // degenerate span → no arc\n  }\n\n  const largeArcFlag = delta > Math.PI ? 1 : 0; // should be 0 for “shortest”, but keep for safety\n  const sweepFlag = 0;                          // CCW\n\n  const p0 = polarToCartesian(cx, cy, radius, a0);\n  const p1 = polarToCartesian(cx, cy, radius, a1);\n\n  return `M ${p0.x} ${p0.y} A ${radius} ${radius} 0 ${largeArcFlag} ${sweepFlag} ${p1.x} ${p1.y}`;\n}\n\n","// src/radial/describeArcSweep.js\nconst TAU = Math.PI * 2;\nconst norm = (t) => ((t % TAU) + TAU) % TAU;\n\nexport default function describeArcSweep(cx, cy, r, a0, a1, sweep /*0=CCW,1=CW*/) {\n  const delta = sweep === 0 ? norm(a1 - a0) : norm(a0 - a1);\n  if (!(r > 0) || delta < 1e-9) return \"\";\n  const largeArcFlag = delta > Math.PI ? 1 : 0;\n\n  const x0 = cx + r * Math.cos(a0), y0 = cy - r * Math.sin(a0);\n  const x1 = cx + r * Math.cos(a1), y1 = cy - r * Math.sin(a1);\n\n  return `M ${x0} ${y0} A ${r} ${r} 0 ${largeArcFlag} ${sweep} ${x1} ${y1}`;\n}\n\n","/**\n * Recursive function for pre-order traversal of tree (returns array)\n */\nexport function preorder(node, list = []) {\n  list.push(node);\n  for (let i = 0; i < (node.children?.length || 0); i++) {\n    list = preorder(node.children[i], list);\n  }\n  return list;\n}\n\n/**\n * Iterative generator traversals (avoid recursion limits on large trees)\n */\nexport function* preorderIter(root) {\n  const stack = [root];\n  while (stack.length) {\n    const n = stack.pop();\n    yield n;\n    if (n.children) for (let i = n.children.length - 1; i >= 0; --i) stack.push(n.children[i]);\n  }\n}\n\nexport function* postorderIter(root) {\n  const stack = [[root, 0]];\n  while (stack.length) {\n    const top = stack[stack.length - 1];\n    const [n, i] = top;\n    if (!n.children || i >= n.children.length) {\n      stack.pop();\n      yield n;\n    } else {\n      top[1] = i + 1;\n      stack.push([n.children[i], 0]);\n    }\n  }\n}\n\n","import { preorder } from \"./preorder.js\"\n\n/**\n * Convert parsed Newick tree from readTree() into data\n * frame.\n * this is akin to a \"phylo\" object in R.\n */\n\nexport default function (tree, sort = true) {\n    var df = [];\n\n    for (const node of preorder(tree)) {\n        if (node.parent === null) {\n            df.push({\n                'parentId': null,\n                'parentLabel': null,\n                'thisId': node.id,\n                'thisLabel': node.label,\n                'children': node.children.map(x => x.id),\n                'branchLength': 0.,\n                'isTip': false,\n                'x': node.x,\n                'y': node.y,\n                'angle': node.angle\n            })\n        }\n        else {\n            df.push({\n                'parentId': node.parent.id,\n                'parentLabel': node.parent.label,\n                'thisId': node.id,\n                'thisLabel': node.label,\n                'children': node.children.map(x => x.id),\n                'branchLength': node.branchLength,\n                'isTip': (node.children.length == 0),\n                'x': node.x,\n                'y': node.y,\n                'angle': node.angle\n            })\n        }\n    }\n\n    if (sort) {\n        df = df.sort(function (a, b) {\n            return a.thisId - b.thisId;\n        })\n    }\n    return (df);\n}\n","import fortify from \"../utils/fortify.js\"\n\n/**\n * Compute per-node polar coordinates for radial layout:\n *  - Tip angles: evenly spaced 0..2π in tip DFS order\n *  - Internal angles: circular mean of child angles\n *  - Radii: cumulative branch length from root\n *  - x,y: cartesian projection\n *\n * Returns the fortified array with added {angle, r, x, y}.\n */\nexport default function radialData(node) {\n  const TAU = Math.PI * 2;\n  const norm = (t) => ((t % TAU) + TAU) % TAU;\n\n  const pd = fortify(node, /*sort*/ true);\n  const byId = new Map(pd.map(d => [d.thisId, d]));\n  const kids = new Map(pd.map(d => [d.thisId, d.children || []]));\n\n  // Find root id\n  let root = null;\n  for (const d of pd) {\n    if (d.parentId == null) { root = d.thisId; break; }\n  }\n\n  // Collect tip ids in DFS left->right order to preserve input ordering\n  const tipIds = [];\n  (function dfs(id) {\n    const c = kids.get(id) || [];\n    if (c.length === 0) {\n      tipIds.push(id);\n      return;\n    }\n    for (const ch of c) dfs(ch);\n  })(root);\n\n  // Assign tip angles evenly spaced 0..2π\n  const N = Math.max(1, tipIds.length);\n  const angle = new Map();\n  tipIds.forEach((id, i) => {\n    angle.set(id, (i / N) * TAU);\n  });\n\n  // Internal node angles: circular mean of child angles (post-order)\n  (function setInternalAngles(id) {\n    const c = kids.get(id) || [];\n    for (const ch of c) setInternalAngles(ch);\n    if (c.length > 0) {\n      let sx = 0, sy = 0;\n      for (const ch of c) {\n        const th = angle.get(ch);\n        sx += Math.cos(th);\n        sy += Math.sin(th);\n      }\n      angle.set(id, norm(Math.atan2(sy, sx)));\n    }\n  })(root);\n\n  // Radii: cumulative branch lengths from root (root r=0)\n  const radius = new Map();\n  radius.set(root, 0);\n  (function setR(id) {\n    const c = kids.get(id) || [];\n    const r0 = radius.get(id) || 0;\n    for (const ch of c) {\n      const child = byId.get(ch);\n      const bl = child?.branchLength ?? 0;\n      radius.set(ch, r0 + bl);\n      setR(ch);\n    }\n  })(root);\n\n  // Enrich pd rows with angle, r, x, y\n  for (const d of pd) {\n    const th = angle.get(d.thisId) ?? 0;\n    const r  = radius.get(d.thisId) ?? 0;\n    d.angle = th;\n    d.r = r;\n    d.x = r * Math.cos(th);\n    d.y = r * Math.sin(th);\n  }\n\n  return pd;\n}\n","import radialData from \"./radialData.js\";\n\n/**\n * Per-edge radial segments (for highlighting and drawing).\n * For each non-root node, draw a radial line from the parent radius to the child radius\n * at the CHILD'S angle.\n *\n * Output: [{ parentId, childId, x0, y0, x1, y1, isTip }]\n */\nexport default function getRadii(node) {\n  const data = radialData(node);\n  const byId = new Map(data.map(d => [d.thisId, d]));\n  const root = data.find(d => d.parentId == null)?.thisId;\n\n  const segments = [];\n  for (const d of data) {\n    if (d.thisId === root) continue;\n    const parent = byId.get(d.parentId);\n    if (!parent) continue;\n\n    const theta = d.angle;\n    const r0 = parent.r;\n    const r1 = d.r;\n\n    segments.push({\n      parentId: parent.thisId,\n      childId: d.thisId,\n      x0: r0 * Math.cos(theta),\n      y0: r0 * Math.sin(theta),\n      x1: r1 * Math.cos(theta),\n      y1: r1 * Math.sin(theta),\n      isTip: !!d.isTip\n    });\n  }\n  return segments;\n}\n\n","// src/radial/getRadiiFromPd.js\n/**\n * Build per-edge spokes using the *current* pd angles/r.\n * Output: [{ parentId, childId, x0,y0,x1,y1, isTip }]\n */\nexport default function getRadiiFromPd(pd) {\n  const byId = new Map(pd.map(d => [d.thisId, d]));\n  const root = pd.find(d => d.parentId == null)?.thisId;\n\n  const segments = [];\n  for (const d of pd) {\n    if (d.thisId === root) continue;\n    const parent = byId.get(d.parentId);\n    if (!parent) continue;\n\n    const theta = d.angle;\n    const r0 = parent.r, r1 = d.r;\n\n    segments.push({\n      parentId: parent.thisId,\n      childId: d.thisId,\n      x0: r0 * Math.cos(theta),\n      y0: r0 * Math.sin(theta),\n      x1: r1 * Math.cos(theta),\n      y1: r1 * Math.sin(theta),\n      isTip: !!d.isTip\n    });\n  }\n  return segments;\n}\n\n","/**\n * Build arc descriptors for each internal parent:\n *  - One arc per internal node at radius = parent.r\n *  - Start/end angles choose the *shortest* wrap-aware span covering the children\n *  - Skips degenerate spans (delta ~ 0)\n */\nexport default function getArcs(pd) {\n  const TAU = Math.PI * 2;\n  const norm = (t) => ((t % TAU) + TAU) % TAU;\n  const EPS = 1e-6;\n\n  // Quick lookups\n  const byId = new Map(pd.map(d => [d.thisId, d]));\n  const childrenByParent = new Map();\n  let root = null;\n\n  for (const d of pd) {\n    if (d.parentId == null) root = d.thisId;\n    if (!childrenByParent.has(d.parentId)) childrenByParent.set(d.parentId, []);\n    childrenByParent.get(d.parentId).push(d);\n  }\n\n  const arcs = [];\n\n  for (const parent of pd) {\n    const pid = parent.thisId;\n    if (pid === root) continue; // no arc above root\n    const kids = childrenByParent.get(pid) || [];\n    if (kids.length < 2) continue; // need at least two children\n\n    // Collect & sort child angles\n    const A = kids.map(k => norm(k.angle)).sort((a, b) => a - b);\n    const aMin = A[0], aMax = A[A.length - 1];\n\n    // Two candidate spans: direct (aMin -> aMax) and wrapped (aMax -> aMin across 2π)\n    const direct = aMax - aMin;\n    const wrapped = TAU - direct;\n\n    // Choose the shorter span. We'll draw **CCW** (sweepFlag = 0) in describeArc.\n    let start, end, span;\n    if (direct <= wrapped) {\n      start = aMin;\n      end = aMax;\n      span = direct;\n    } else {\n      // wrapped is shorter: go CCW from aMax up through 2π to aMin\n      start = aMax;\n      end = aMin;\n      span = wrapped;\n    }\n\n    if (span < EPS || !isFinite(parent.r) || parent.r <= 0) continue;\n\n    arcs.push({\n      start,\n      end,\n      radius: parent.r,\n      thisId: pid,\n      parentId: parent.parentId\n    });\n  }\n\n  return arcs;\n}\n\n","/**\n * Build APE-like block arcs per internal parent:\n *  radius = parent.r\n *  start = first child's angle\n *  end   = last child's angle\n *  sweep = 0 (CCW) if end>=start; 1 (CW) if wrapped across 2π\n *\n * @param {Array} pd nodes with {thisId,parentId,children,angle,r}\n * @returns {Array} [{parentId,thisId,radius,start,end,sweep}]\n */\nexport default function getArcsFan(pd) {\n  const byId = new Map(pd.map(d => [d.thisId, d]));\n  const arcs = [];\n\n  for (const p of pd) {\n    const c = p.children || [];\n    if (c.length < 2 || !(p.r > 0)) continue;\n\n    const first = byId.get(c[0])?.angle;\n    const last  = byId.get(c[c.length - 1])?.angle;\n    if (first == null || last == null) continue;\n\n    const start = first;\n    const end = last;\n    const sweep = end >= start ? 0 : 1; // CW if wrapped\n\n    arcs.push({\n      parentId: p.parentId,\n      thisId: p.thisId,\n      radius: p.r,\n      start,\n      end,\n      sweep\n    });\n  }\n  return arcs;\n}\n\n","// APE-like \"fan\" angles: tips evenly spaced with open-angle gap & rotation,\n// internal nodes = arithmetic mean of unwrapped child angles.\nconst TAU = Math.PI * 2;\nconst norm = (t) => ((t % TAU) + TAU) % TAU;\n\nfunction unwrapAround(ref, a) {\n  let x = a;\n  while (x < ref - Math.PI) x += TAU;\n  while (x > ref + Math.PI) x -= TAU;\n  return x;\n}\n\nexport default function fanAngles(pd, opts = {}) {\n  const { openAngleDeg = 0, rotateDeg = 0 } = opts;\n  const gap = (openAngleDeg / 360) * TAU;\n  const rot = (rotateDeg / 360) * TAU;\n\n  // root + children index\n  let root = null;\n  const kids = new Map(pd.map((d) => [d.thisId, d.children || []]));\n  for (const d of pd) if (d.parentId == null) { root = d.thisId; break; }\n\n  // tip order (DFS left→right like your fortify)\n  const tipIds = [];\n  (function dfs(id) {\n    const c = kids.get(id) || [];\n    if (!c.length) { tipIds.push(id); return; }\n    for (const ch of c) dfs(ch);\n  })(root);\n\n  const N = Math.max(1, tipIds.length);\n  const maxA = TAU * (1 - 1 / N) - gap;       // note: no last-step overlap\n  const step = N > 1 ? maxA / (N - 1) : 0;\n\n  const angle = new Map();\n  tipIds.forEach((id, i) => angle.set(id, norm(i * step + rot)));\n\n  // internal nodes: arithmetic mean of child angles (unwrapped)\n  (function setInternal(id) {\n    const c = kids.get(id) || [];\n    for (const ch of c) setInternal(ch);\n    if (c.length) {\n      const a0 = angle.get(c[0]);\n      const arr = c.map((ch) => unwrapAround(a0, angle.get(ch)));\n      angle.set(id, norm(arr.reduce((s, v) => s + v, 0) / arr.length));\n    }\n  })(root);\n\n  return angle;\n}\n\n","/**\n * Per-child \"half\" arcs for radial trees.\n *\n * For each non-root node (child), emit an arc at the PARENT's radius that\n * spans between the parent's angle and the child's angle. This is the arc\n * segment that meets the child's spoke and is ideal for root→tip highlighting.\n *\n * Input:  pd — the array returned by radialData(node) (each row has .thisId, .parentId, .angle, .r)\n * Output: [{ parentId, childId, radius, start, end }]\n */\nexport default function getChildArcs(pd) {\n  const byId = new Map(pd.map(d => [d.thisId, d]));\n  const arcs = [];\n\n  for (const child of pd) {\n    if (child.parentId == null) continue; // skip root\n    const parent = byId.get(child.parentId);\n    if (!parent) continue;\n\n    arcs.push({\n      parentId: parent.thisId,\n      childId: child.thisId,\n      radius: parent.r,        // draw on the parent's circle\n      start: parent.angle,     // start at parent's angle\n      end: child.angle         // end at child's angle (describeArc will choose the shortest CCW span)\n    });\n  }\n\n  return arcs;\n}\n\n","// src/radial/radialLayout.js\nimport radialData from \"./radialData.js\";\nimport getRadii from \"./getRadii.js\";\nimport getRadiiFromPd from \"./getRadiiFromPd.js\";\nimport getArcs from \"./getArcs.js\";            // your existing \"shortest-arc\"\nimport getArcsFan from \"./getArcsFan.js\";      // new\nimport fanAngles from \"./fanAngles.js\";\nimport getChildArcs from \"./getChildArcs.js\";  // optional existing helper\n\n/**\n * radialLayout(node, opts?)\n * opts:\n *   - angleStrategy: \"cmean\" (default, your current) | \"fan\" (APE-like)\n *   - arcsStyle:     \"shortest\" (default) | \"fan\" (block arcs, supports wrap)\n *   - openAngleDeg:  number (gap wedge for \"fan\" angles)\n *   - rotateDeg:     number (rotation for \"fan\" angles)\n */\nexport default function radialLayout(node, opts = {}) {\n  const {\n    // default fan\n    angleStrategy = \"fan\",\n    arcsStyle = \"fan\",\n    openAngleDeg = 0,\n    rotateDeg = 0\n  } = opts;\n\n  // Start with your current enriched nodes (angle + r from radialData)\n  const pd = radialData(node);\n\n  if (angleStrategy === \"fan\") {\n    // overwrite angles with APE-like fan angles; keep radii r as-is\n    const angleMap = fanAngles(pd, { openAngleDeg, rotateDeg });\n    for (const d of pd) {\n      const a = angleMap.get(d.thisId);\n      if (a != null) {\n        d.angle = a;\n        d.x = d.r * Math.cos(a);\n        d.y = d.r * Math.sin(a);\n      }\n    }\n  }\n\n  // Build spokes using the angles currently on pd\n  const radii = (angleStrategy === \"fan\")\n    ? getRadiiFromPd(pd)\n    : getRadii(node);\n\n  // Choose arc builder\n  const arcs = (arcsStyle === \"fan\")\n    ? getArcsFan(pd)\n    : getArcs(pd);\n\n  // per-child arcs for half-arc highlighting if you already use them\n  const child_arcs = getChildArcs(pd);\n\n  return { data: pd, radii, arcs, child_arcs };\n}\n\n","/**\n * Iterable mean\n * Poached from https://github.com/d3/d3-array/blob/master/src/mean.js\n * (Other array means buggered up the tree)\n */\n\nexport default function (values, valueof) {\n    let count = 0;\n    let sum = 0;\n    if (valueof === undefined) {\n        for (let value of values) {\n            if (value != null && (value = +value) >= value) {\n                ++count, sum += value;\n            }\n        }\n    } else {\n        let index = -1;\n        for (let value of values) {\n            if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n                ++count, sum += value;\n            }\n        }\n    }\n    if (count) return sum / count;\n}\n","import mean from \"../utils/mean.js\"\nimport fortify from \"../utils/fortify.js\"\n\n/**\n * Rectangle layout: compute per-node x0,x1 and y0=y1\n * - Tip y is assigned by input order (preserves ladderize/order)\n * - Internal node y is mean of child y's\n * - x1 accumulates branch lengths from root\n */\n\nexport default function getHorizontal(node) {\n  const pd = fortify(node);\n\n  // Fast lookup from id -> pd index\n  const idIndex = new Map(pd.map((d, i) => [d.thisId, i]));\n\n  // 1) Leaf order from the INPUT TREE (respects your child order / ladderize)\n  const leafIds = [];\n  (function dfs(n) {\n    if (!n.children || n.children.length === 0) { leafIds.push(n.id); return; }\n    n.children.forEach(dfs);\n  })(node);\n\n  // Map each leaf id to a vertical slot (1..N)\n  const tipSlot = new Map(leafIds.map((id, i) => [id, i + 1]));\n\n  // 2) Set Y for tips directly from that order; internal node Y via children mean\n  (function setY(n) {\n    const i = idIndex.get(n.id);\n    if (!n.children || n.children.length === 0) {\n      const y = tipSlot.get(n.id);\n      pd[i].y0 = y; pd[i].y1 = y;\n      return y;\n    }\n    const ys = n.children.map(setY);\n    const y = mean(ys);\n    pd[i].y0 = y; pd[i].y1 = y;\n    return y;\n  })(node);\n\n  // 3) Set X by accumulating branch lengths down the tree\n  (function setX(n, xParent) {\n    const i = idIndex.get(n.id);\n    const bl = pd[i].branchLength ?? 0;\n    const x0 = xParent ?? 0;\n    const x1 = x0 + bl;\n    pd[i].x0 = x0; pd[i].x1 = x1;\n    if (n.children && n.children.length) n.children.forEach(c => setX(c, x1));\n  })(node, 0);\n\n  // Clean up: remove fields not needed downstream without triggering no-unused-vars\n  return pd.map((row) => {\n    const { y: _y, x: _x, angle: _angle, ...item } = row;\n    return item;\n  });\n}\n\n","import getHorizontal from \"./getHorizontal.js\"\n\nexport default function getVertical(node) {\n  const data = getHorizontal(node);\n\n  // Group rows by parentId (children that share a parent)\n  const byParent = new Map();\n  for (const row of data) {\n    if (row.parentId == null) continue;\n    const a = byParent.get(row.parentId);\n    if (a) a.push(row); else byParent.set(row.parentId, [row]);\n  }\n\n  const verticals = [];\n  for (const [parentId, kids] of byParent.entries()) {\n    if (!kids.length) continue;\n    // Works for binary and multifurcations:\n    const yvals = kids.map(d => d.y0);\n    const y0 = Math.min(...yvals);\n    const y1 = Math.max(...yvals);\n    // All children share the same junction x (their x0)\n    const x = kids[0].x0;\n\n    verticals.push({\n      parentId,\n      x0: x,\n      x1: x,\n      y0,\n      y1,\n      heights: y1 - y0\n    });\n  }\n\n  return verticals;\n}\n\n","import getHorizontal from \"./getHorizontal.js\";\n\n/**\n * Build per-child vertical segments for a rectangular tree:\n * For each non-root node (child), draw a vertical from (parent.x, child.y) to (parent.x, parent.y).\n * This yields exactly one vertical per edge (child->parent), making highlighting trivial.\n *\n * Returns an array of:\n *   {\n *     parentId: number,\n *     childId: number,\n *     x: number,         // x of the parent junction\n *     y0: number,        // min(child.y, parent.y)\n *     y1: number,        // max(child.y, parent.y)\n *   }\n */\nexport default function getChildVerticals(node) {\n  const data = getHorizontal(node); // has parentId, thisId, x0,x1,y0=y1\n\n  // Build a quick index to access parent's y by id\n  const byId = new Map(data.map(d => [d.thisId, d]));\n\n  const childVerticals = [];\n\n  for (const d of data) {\n    if (d.parentId == null) continue;\n    const parent = byId.get(d.parentId);\n    if (!parent) continue;\n\n    const x = d.x0;            // child’s vertical sits at parent.x == child.x0\n    const yc = d.y0;           // child y\n    const yp = parent.y0;      // parent y\n    const y0 = Math.min(yc, yp);\n    const y1 = Math.max(yc, yp);\n\n    childVerticals.push({\n      parentId: d.parentId,\n      childId: d.thisId,\n      x,\n      y0,\n      y1\n    });\n  }\n\n  return childVerticals;\n}\n\n","import getHorizontal from \"./getHorizontal.js\"\nimport getVertical from \"./getVertical.js\"\nimport getChildVerticals from \"./getChildVerticals.js\"\n\n/**\n * Rectangle layout wrapper.\n * Returns:\n *  - data: per-node rows (x0,x1,y0=y1,...)\n *  - vertical_lines: single spanning vertical per parent (baseline draw)\n *  - child_vertical_lines: one vertical per edge (for highlighting)\n *  - horizontal_lines: per-edge child horizontals (x0->x1 at y), with labels & tip flags\n */\nexport default function rectangleLayout(node) {\n  const data = getHorizontal(node);              // per-node\n  const vertical_lines = getVertical(node);      // parent spans\n  const child_vertical_lines = getChildVerticals(node); // per-edge verticals\n\n  // IMPORTANT: include y0 & y1, and carry isTip/labels for the renderer\n  const byId = new Map(data.map(d => [d.thisId, d]));\n  const horizontal_lines = data\n    .filter(d => d.parentId != null)\n    .map(d => ({\n      parentId: d.parentId,\n      childId: d.thisId,\n      thisId: d.thisId,\n      thisLabel: d.thisLabel,\n      isTip: d.isTip,\n      x0: d.x0,\n      x1: d.x1,\n      y0: d.y0,\n      y1: d.y0\n    }));\n\n  return { data, vertical_lines, child_vertical_lines, horizontal_lines };\n}\n\n","/**\n * Convert parsed Newick tree from fortify() into data frame of edges\n * this is akin to a \"phylo\" object in R, where thisID and parentId\n * are the $edge slot. I think.\n */\n\nexport default function edges(df, rectangular = false) {\n  const rows = [...df].sort((a, b) => a.thisId - b.thisId);\n  const byId = new Map(rows.map((r) => [r.thisId, r]));\n  const result = [];\n\n  for (const row of rows) {\n    if (row.parentId == null) continue;\n    const parent = byId.get(row.parentId);\n    if (!parent) continue;\n\n    if (rectangular) {\n      result.push({ x1: row.x, y1: row.y, id1: row.thisId, x2: parent.x, y2: row.y, id2: undefined });\n      result.push({ x1: parent.x, y1: row.y, id1: undefined, x2: parent.x, y2: parent.y, id2: row.parentId });\n    } else {\n      result.push({ x1: row.x, y1: row.y, id1: row.thisId, x2: parent.x, y2: parent.y, id2: row.parentId });\n    }\n  }\n  return result;\n}\n\n","/**\n * Recursive function for breadth-first search of a tree\n * the root node is visited first.\n */\n\nfunction levelorder(root) {\n  const queue = [root], result = [];\n  while (queue.length) {\n    const curnode = queue.shift();         // <- FIFO\n    result.push(curnode);\n    for (const child of curnode.children) queue.push(child);\n  }\n  return result;\n}\n\n\n/**\n * Count the number of tips that descend from this node\n */\n\nexport default function(thisnode) {\n  var result = 0;\n  for (const node of levelorder(thisnode)) {\n    if (node.children.length == 0) result++;\n  }\n  return (result);\n}\n","import numTips from \"../utils/numTips.js\"\n\n/**\n * Equal-angle layout for unrooted trees.\n * - Precomputes ntips in O(n) to avoid repeated subtree counts\n * - Uses angles in \"π units\" (0..2) to match existing API\n * - Populates x,y positions from branchLength and angle\n */\n\nfunction annotateTipCounts(root) {\n  (function post(n) {\n    if (!n.children || n.children.length === 0) {\n      n.ntips = 1; return 1;\n    }\n    let sum = 0;\n    for (const c of n.children) sum += post(c);\n    n.ntips = sum;\n    return sum;\n  })(root);\n  return root;\n}\n\nfunction equalAngleLayout(node) {\n  if (node.parent === null) {\n    annotateTipCounts(node);\n    node.start = 0.;     // guarantees no arcs overlap 0\n    node.end = 2.;       // *π\n    node.angle = 0.;     // irrelevant at root\n    node.ntips = numTips(node); // safe (already computed), left for compatibility\n    node.x = 0;\n    node.y = 0;\n  }\n\n  let lastStart = node.start;\n\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    const arc = (node.end - node.start) * (child.ntips / node.ntips);\n\n    child.start = lastStart;\n    child.end = lastStart + arc;\n\n    // bisect the arc in π-units\n    child.angle = child.start + (child.end - child.start) / 2.;\n    lastStart = child.end;\n\n    // map to coordinates (convert π-units to radians by multiplying by Math.PI)\n    const theta = child.angle * Math.PI;\n    const bl = (child.branchLength ?? 0);\n    child.x = node.x + bl * Math.sin(theta);\n    child.y = node.y + bl * Math.cos(theta);\n\n    equalAngleLayout(child);\n  }\n\n  return node;\n}\n\nexport default equalAngleLayout\n\n","import edges from \"../utils/edges.js\";\nimport fortify from \"../utils/fortify.js\";\nimport equalAngleLayout from \"./equalAngleLayout.js\";\n\n/**\n * Simple wrapper function for equalAngleLayout()\n */\n\nexport default function (node) {\n  var data = {};\n  // use the Felsenstein equal angle layout algorithm\n  var eq = fortify(equalAngleLayout(node));\n  data.data = eq;\n  // make the edges dataset\n  data.edges = edges(eq);\n\n  return data;\n}\n","/**\n * Parse a Newick tree string into a doubly-linked list of JS Objects.\n * Assigns labels, branch lengths, and node IDs (tips before internals if input emits them that way).\n *\n * Notes / limitations:\n * - Quoted labels and NHX annotations are not fully supported.\n * - Branch lengths in scientific notation are supported (parseFloat).\n */\n\nexport default function readTree(text) {\n  // Remove all whitespace (space, tabs, newlines)\n  text = String(text).replace(/\\s+/g, '');\n\n  const tokens = text.split(/(;|\\(|\\)|,)/);\n  const root = { parent: null, children: [] };\n  let curnode = root;\n  let nodeId = 0;\n\n  for (const token of tokens) {\n    if (!token || token === ';') continue;\n\n    if (token === '(') {\n      const child = { parent: curnode, children: [] };\n      curnode.children.push(child);\n      curnode = child; // descend\n    } else if (token === ',') {\n      // back to parent, then create sibling\n      curnode = curnode.parent;\n      const child = { parent: curnode, children: [] };\n      curnode.children.push(child);\n      curnode = child;\n    } else if (token === ')') {\n      // ascend one level\n      curnode = curnode.parent;\n      if (curnode === null) break;\n    } else {\n      // label/branch-length chunk (e.g., \"A:0.01\" or \"A\")\n      const nodeinfo = token.split(':');\n      if (nodeinfo.length === 1) {\n        if (token.startsWith(':')) {\n          curnode.label = '';\n          curnode.branchLength = parseFloat(nodeinfo[0]);\n        } else {\n          curnode.label = nodeinfo[0];\n          curnode.branchLength = null;\n        }\n      } else if (nodeinfo.length === 2) {\n        curnode.label = nodeinfo[0];\n        curnode.branchLength = parseFloat(nodeinfo[1]);\n      } else {\n        console.warn(token, \"Unhandled token with multiple ':' characters\");\n        curnode.label = nodeinfo[0] || '';\n        curnode.branchLength = parseFloat(nodeinfo[nodeinfo.length - 1]);\n      }\n      curnode.id = nodeId++; // assign then increment\n    }\n  }\n\n  // Ensure root has an id if not assigned during parsing\n  if (root.id == null) root.id = nodeId;\n\n  return root;\n}\n\n","import * as d3 from \"d3\";\nimport * as lw from \"../index.js\";\n\nexport default function drawPhylogeny(\n  treeText,\n  {\n    layout = \"rect\", // rect/radial/unrooted\n    width = 800,\n    height = 800,\n    margin = { top: 20, right: 300, bottom: 20, left: 50 },\n    radialMargin = 80,\n    strokeWidth = 1, // for the phylogeny branches\n    radialMode = \"outer\", // \"outer\" (co-circular tips) or \"phylo\" (true terminals)\n    tipLabels = true,\n    showTooltips = true,\n    tooltipFormatter = (d, rtt) =>\n      `${d.thisLabel ?? \"(unnamed)\"}\\nroot→tip: ${(+rtt).toFixed(4)}`,\n    hoverStroke = \"#1f77b4\",\n    hoverWidth = 3,\n    highlightTips = [], // array of tip labels or ids for static highlight (optional)\n    highlightStroke = \"#e63946\",\n    highlightWidth = 2.5\n  } = {}\n) {\n\n  // shared helpers\n  const isNumber = (x) => typeof x === \"number\" && Number.isFinite(x);\n  // Works for both radial (uses `r`) and rect (uses `x1`).\n  // Falls back to summing branchLength up to the root if neither is present.\n  function makeRootToTipGetter(byId, { prefer = \"auto\" } = {}) {\n    return function rootToTip(tipId) {\n      let n = byId.get(tipId);\n      if (!n) return 0;\n\n      // Prefer explicit cumulative fields if present\n      if (prefer === \"r\" || (prefer === \"auto\" && \"r\" in n)) {\n        return Number(n.r ?? 0);\n      }\n      if (prefer === \"x1\" || (prefer === \"auto\" && \"x1\" in n)) {\n        return Number(n.x1 ?? 0);\n      }\n\n      // Fallback: sum branchLength up the ancestry\n      let sum = 0;\n      while (n && n.parentId != null) {\n        sum += Number(n.branchLength || 0); // null/undefined → 0\n        n = byId.get(n.parentId);\n      }\n      return sum;\n    };\n  }\n\n\n  if (layout === \"rect\") {\n    // RECTANGULAR LAYOUT\n    const tree_df = lw.rectangleLayout(lw.readTree(treeText));\n    const horizontal = tree_df.horizontal_lines;\n    const vertical = tree_df.vertical_lines;\n    const tips = horizontal.filter((d) => d.isTip);\n\n    // indices & root→tip getter\n    const byId = new Map(horizontal.map((d) => [d.thisId, d]));\n    const tipById = new Map(tips.map((d) => [d.thisId, d]));\n    const tipByLabel = new Map(tips.map((d) => [d.thisLabel, d]));\n    const rootToTip = makeRootToTipGetter(byId, { prefer: \"x1\" });\n\n    const maxY = d3.max(horizontal, (d) => d.y1);\n    const minY = d3.min(horizontal, (d) => d.y1);\n    const maxX = d3.max(horizontal, (d) => d.x1);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([minY - 1, maxY + 1])\n      .range([margin.top, height - margin.bottom]);\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, maxX])\n      .range([margin.left, width - margin.right]);\n\n    const svg = d3\n      .create(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10);\n\n    const group = svg.append(\"g\");\n\n    // layers for highlight/hover\n    const staticLayer = svg.append(\"g\").attr(\"class\", \"phylo_static_highlight\");\n    const hoverLayer = svg.append(\"g\").attr(\"class\", \"phylo_hover_highlight\");\n\n    group\n      .selectAll(\".hline\")\n      .data(horizontal)\n      .join(\"line\")\n      .attr(\"x1\", (d) => xScale(d.x0))\n      .attr(\"y1\", (d) => yScale(d.y0))\n      .attr(\"x2\", (d) => xScale(d.x1))\n      .attr(\"y2\", (d) => yScale(d.y1))\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", strokeWidth);\n\n    group\n      .selectAll(\".vline\")\n      .data(vertical)\n      .join(\"line\")\n      .attr(\"x1\", (d) => xScale(d.x0))\n      .attr(\"y1\", (d) => yScale(d.y0))\n      .attr(\"x2\", (d) => xScale(d.x1))\n      .attr(\"y2\", (d) => yScale(d.y1))\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", strokeWidth);\n\n    // tip dots\n    const tipDots = group\n      .selectAll(\".tip-dot\")\n      .data(tips)\n      .join(\"circle\")\n      .attr(\"cx\", (d) => xScale(d.x1))\n      .attr(\"cy\", (d) => yScale(d.y1))\n      .attr(\"r\", 2)\n      .attr(\"fill\", \"black\");\n\n    // tooltips for rect dots\n    if (showTooltips) {\n      tipDots\n        .append(\"title\")\n        .text((d) => tooltipFormatter(d, rootToTip(d.thisId)));\n    }\n\n    // interactive root→tip highlight (rect) on dot hover\n    tipDots\n      .on(\"mouseenter\", function(_event, d) {\n        drawRectPath(d.thisId, hoverLayer, hoverStroke, hoverWidth);\n        d3.select(this).attr(\"r\", 4);\n      })\n      .on(\"mouseleave\", function() {\n        hoverLayer.selectAll(\"*\").remove();\n        d3.select(this).attr(\"r\", 2);\n      });\n\n    // labels\n    if (tipLabels) {\n      const labels = svg\n        .append(\"g\")\n        .attr(\"class\", \"phylo_labels\")\n        .selectAll(\"text\")\n        .data(tips)\n        .join(\"text\")\n        .attr(\"x\", (d) => xScale(d.x1) + 4)\n        .attr(\"y\", (d) => yScale(d.y1))\n        .attr(\"dy\", \"0.32em\")\n        .attr(\"font-size\", 10)\n        .text((d) => d.thisLabel?.replace(/_/g, \" \") ?? \"\");\n\n      if (showTooltips) {\n        labels\n          .append(\"title\")\n          .text((d) => tooltipFormatter(d, rootToTip(d.thisId)));\n      }\n\n      labels\n        .on(\"mouseenter\", function(_event, d) {\n          drawRectPath(d.thisId, hoverLayer, hoverStroke, hoverWidth);\n          d3.select(this).attr(\"font-weight\", 600);\n        })\n        .on(\"mouseleave\", function() {\n          hoverLayer.selectAll(\"*\").remove();\n          d3.select(this).attr(\"font-weight\", null);\n        });\n    }\n\n    // static highlight by ids/labels\n    if (highlightTips && highlightTips.length) {\n      const chosen = new Set(\n        [\n          ...highlightTips.filter(isNumber).map((id) => tipById.get(id)),\n          ...highlightTips\n            .filter((x) => !isNumber(x))\n            .map((lb) => tipByLabel.get(lb))\n        ].filter(Boolean)\n      );\n      chosen.forEach((tip) => {\n        drawRectPath(tip.thisId, staticLayer, highlightStroke, highlightWidth);\n      });\n    }\n\n    // helper to draw root→tip for rect (both vertical+horizontal)\n    function drawRectPath(tipId, layer, stroke, width) {\n      layer.selectAll(\"*\").remove();\n      let cur = byId.get(tipId);\n      while (cur && cur.parentId != null) {\n        const parent = byId.get(cur.parentId);\n        if (!parent) break;\n\n        // vertical at junction x0 from parent.y to child.y\n        layer\n          .append(\"line\")\n          .attr(\"x1\", xScale(cur.x0))\n          .attr(\"x2\", xScale(cur.x0))\n          .attr(\"y1\", yScale(parent.y0))\n          .attr(\"y2\", yScale(cur.y0))\n          .attr(\"stroke\", stroke)\n          .attr(\"stroke-width\", width)\n          .attr(\"stroke-linecap\", \"round\");\n\n        // horizontal along child's y, from junction x0 to x1\n        layer\n          .append(\"line\")\n          .attr(\"x1\", xScale(cur.x0))\n          .attr(\"x2\", xScale(cur.x1))\n          .attr(\"y1\", yScale(cur.y0))\n          .attr(\"y2\", yScale(cur.y1))\n          .attr(\"stroke\", stroke)\n          .attr(\"stroke-width\", width)\n          .attr(\"stroke-linecap\", \"round\");\n\n        cur = parent;\n      }\n    }\n\n    return svg.node();\n  } else if (layout === \"radial\") {\n    // RADIAL LAYOUT\n    if (width !== height) {\n      new Error(\"width and height must be the same for radial layout\");\n    }\n    const parsedTree = lw.readTree(treeText);\n    const rad = lw.radialLayout(parsedTree, {\n      angleStrategy: \"fan\",\n      arcsStyle: \"fan\"\n    });\n\n    // ===== MODE =====\n    const TIP_MODE = radialMode; // \"phylo\" (shorten to original tips) or \"outer\" (project to one circle)\n    const isOuter = TIP_MODE === \"outer\";\n    if (TIP_MODE != \"phylo\" || TIP_MODE != \"outer\") {\n      new Error(\"radialMode must be either 'phylo' or 'outer'\");\n    }\n\n    // visuals (0 = let spokes reach the dots)\n    const DOT_R = 3;\n    const END_CAP = 0;\n\n    // ===== SCALES / BOUNDS =====\n    const maxRadius = d3.max(rad.data, (d) => d.r) ?? 0;\n    const scaleRadial = maxRadius + 2 * radialMargin;\n    const w = width,\n      h = height;\n    const centerX = w / 2,\n      centerY = h / 2;\n\n    const xScaleRadial = d3\n      .scaleLinear()\n      .domain([-scaleRadial, scaleRadial])\n      .range([0, w]);\n    const yScaleRadial = d3\n      .scaleLinear()\n      .domain([-scaleRadial, scaleRadial])\n      .range([h, 0]);\n\n    const radiusPx = (r) => r * (w / (2 * scaleRadial));\n\n    // ===== INDEXES / HELPERS =====\n    const byId = new Map(rad.data.map((d) => [d.thisId, d]));\n    const tips = rad.data.filter((d) => d.isTip);\n    const tipMaxR = tips.length ? d3.max(tips, (d) => d.r) : 0;\n    const rootToTip = makeRootToTipGetter(byId, { prefer: \"r\" });\n    const tipById = new Map(tips.map((d) => [d.thisId, d])); // HILITE:\n    const tipByLabel = new Map(tips.map((d) => [d.thisLabel, d])); // HILITE:\n\n    // Robust child-id extractor (handles multiple shapes)\n    function childIdOf(spoke) {\n      // prefer explicit child id fields; fall back to thisId; last-ditch id1 (seen in some edge shapes)\n      return spoke.childId ?? spoke.thisId ?? spoke.id1 ?? null;\n    }\n\n    // Shorten the *screen-space* end of a spoke by END_CAP px\n    function shortenSpokePx(x0, y0, x1, y1) {\n      const X0 = xScaleRadial(x0),\n        Y0 = yScaleRadial(y0);\n      const X1 = xScaleRadial(x1),\n        Y1 = yScaleRadial(y1);\n      const dx = X1 - X0,\n        dy = Y1 - Y0;\n      const len = Math.hypot(dx, dy) || 1;\n      const t = Math.max(0, (len - END_CAP) / len);\n      return { X0, Y0, X1s: X0 + dx * t, Y1s: Y0 + dy * t, len };\n    }\n\n    // ===== SVG ROOT =====\n    const svg = d3\n      .create(\"svg\")\n      .attr(\"width\", w)\n      .attr(\"height\", h)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10);\n\n    const group = svg.append(\"g\");\n\n    // overlay groups (drawn on top)\n    const staticLines = svg.append(\"g\").attr(\"class\", \"phylo_static_lines\"); // HILITE:\n    const staticArcs = svg.append(\"g\").attr(\"class\", \"phylo_static_arcs\"); // HILITE:\n    const hoverLines = svg.append(\"g\").attr(\"class\", \"phylo_hover_lines\"); // HILITE:\n    const hoverArcs = svg.append(\"g\").attr(\"class\", \"phylo_hover_arcs\"); // HILITE:\n\n    // ===== ARCS (parent circles) =====\n    group\n      .append(\"g\")\n      .attr(\"class\", \"phylo_arcs\")\n      .selectAll(\"path\")\n      .data(rad.arcs)\n      .join(\"path\")\n      .attr(\"d\", (d) =>\n        d.sweep == null\n          ? lw.describeArc(\n            centerX,\n            centerY,\n            radiusPx(d.radius),\n            d.start,\n            d.end\n          )\n          : lw.describeArcSweep(\n            centerX,\n            centerY,\n            radiusPx(d.radius),\n            d.start,\n            d.end,\n            d.sweep\n          )\n      )\n\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#777\")\n      .attr(\"stroke-width\", strokeWidth);\n\n    // ===== RADII (spokes) =====\n    group\n      .append(\"g\")\n      .attr(\"class\", \"phylo_radii\")\n      .selectAll(\"line\")\n      .data(rad.radii)\n      .join(\"line\")\n      .each(function(s, _i) {\n        // parent end (data space)\n        const x0 = s.x0,\n          y0 = s.y0;\n\n        // child end (data space), shape-agnostic\n        const cid = childIdOf(s);\n        const node = cid != null ? byId.get(cid) : undefined;\n        const isTipSpoke = !!(node && node.isTip);\n\n        // default to the original child endpoint from the spoke record\n        let x1 = s.x1,\n          y1 = s.y1;\n\n        // In \"outer\" mode, project only *tip* spokes to the common circle\n        if (isOuter && isTipSpoke) {\n          x1 = tipMaxR * Math.cos(node.angle);\n          y1 = tipMaxR * Math.sin(node.angle);\n        }\n\n        // Shorten in screen space so the spoke doesn’t pierce the dot (END_CAP can be 0)\n        const { X0, Y0, X1s, Y1s, _len } = shortenSpokePx(x0, y0, x1, y1);\n\n        d3.select(this)\n          .attr(\"x1\", X0)\n          .attr(\"y1\", Y0)\n          .attr(\"x2\", X1s)\n          .attr(\"y2\", Y1s)\n          .attr(\"stroke\", \"#777\")\n          .attr(\"stroke-width\", strokeWidth);\n      });\n\n    // ===== TIP DOTS =====\n    const tipDots = group\n      .append(\"g\")\n      .attr(\"class\", \"phylo_tip_dots\")\n      .selectAll(\"circle\")\n      .data(tips)\n      .join(\"circle\")\n      .each(function(d, _i) {\n        // dot at original tip (align) or projected circle (outer)\n        const x = isOuter ? tipMaxR * Math.cos(d.angle) : d.x;\n        const y = isOuter ? tipMaxR * Math.sin(d.angle) : d.y;\n\n        d3.select(this)\n          .attr(\"cx\", xScaleRadial(x))\n          .attr(\"cy\", yScaleRadial(y))\n          .attr(\"r\", DOT_R)\n          .attr(\"fill\", \"black\")\n          .attr(\"stroke\", \"black\")\n          .attr(\"stroke-width\", 1.5);\n      });\n\n    if (showTooltips) {\n      tipDots\n        .append(\"title\")\n        .text((d) => tooltipFormatter(d, rootToTip(d.thisId)));\n    }\n\n    // maps for fast lookup on hover (childId → spoke / arc)\n    const spokeByChild = new Map(rad.radii.map((s) => [childIdOf(s), s]));\n    const arcByChild = new Map(rad.child_arcs.map((a) => [a.childId, a]));\n\n    // ===== LABELS =====\n    // Labels — make them follow the tip position used by the current mode\n    if (tipLabels) {\n      const labels = group\n        .append(\"g\")\n        .attr(\"class\", \"phylo_labels\")\n        .selectAll(\"g.label\")\n        .data(tips)\n        .join(\"g\")\n        .attr(\"class\", \"label\")\n        .attr(\"transform\", (d) => {\n          // same tip position rule as dots/spokes:\n          //  - \"outer\": snap to common ring (tipMaxR)\n          //  - otherwise (e.g. \"align\"/\"phylo\"): true tip radius\n          const r = isOuter ? tipMaxR : d.r;\n          const x = r * Math.cos(d.angle);\n          const y = r * Math.sin(d.angle);\n          return `translate(${xScaleRadial(x)},${yScaleRadial(y)})`;\n        })\n        .each(function(d) {\n          // rotate so text reads outward; flip when on the left side\n          let angle = (-d.angle * 180) / Math.PI;\n          let xoff = 10; // radial padding for text (px)\n          let anchor = \"start\";\n          if (d.angle > Math.PI / 2 && d.angle < (3 * Math.PI) / 2) {\n            angle += 180;\n            xoff *= -1;\n            anchor = \"end\";\n          }\n          d3.select(this)\n            .append(\"g\")\n            .attr(\"transform\", `rotate(${angle})`)\n            .append(\"text\")\n            .attr(\"x\", xoff)\n            .attr(\"alignment-baseline\", \"middle\")\n            .attr(\"text-anchor\", anchor)\n            .attr(\"font-size\", 10)\n            .attr(\"fill\", \"black\")\n            .text((d) => d.thisLabel?.replace(/_/g, \" \") ?? \"\");\n        });\n\n      if (showTooltips) {\n        labels\n          .append(\"title\")\n          .text((d) => tooltipFormatter(d, rootToTip(d.thisId)));\n      }\n\n      // label hover\n      labels\n        .on(\"mouseenter\", function(_event, d) {\n          drawRadialPath(d, hoverLines, hoverArcs, hoverStroke, hoverWidth);\n          d3.select(this).select(\"text\").attr(\"font-weight\", 600);\n        })\n        .on(\"mouseleave\", function() {\n          hoverLines.selectAll(\"*\").remove();\n          hoverArcs.selectAll(\"*\").remove();\n          d3.select(this).select(\"text\").attr(\"font-weight\", null);\n        });\n    }\n\n    // draw (overlay) the root→tip path: spokes + arcs (half-arc per child)\n    function drawRadialPath(\n      target,\n      lineLayer,\n      arcLayer,\n      stroke = \"#1f77b4\",\n      width = 3\n    ) {\n      // target may be a tip node *or* a numeric tip id\n      lineLayer.selectAll(\"*\").remove();\n      arcLayer.selectAll(\"*\").remove();\n\n      let cur = typeof target === \"number\" ? byId.get(target) : target;\n      if (!cur) return;\n\n      let first = true;\n      while (cur && cur.parentId != null) {\n        // ----- spoke (parent → child) -----\n        const s = spokeByChild.get(cur.thisId);\n        if (s) {\n          const px = s.x0,\n            py = s.y0;\n          let cx = s.x1,\n            cy = s.y1;\n          if (isOuter && first && cur.isTip) {\n            const r = tipMaxR;\n            cx = r * Math.cos(cur.angle);\n            cy = r * Math.sin(cur.angle);\n          }\n          const { X0, Y0, X1s, Y1s } = shortenSpokePx(px, py, cx, cy);\n          lineLayer\n            .append(\"line\")\n            .attr(\"x1\", X0)\n            .attr(\"y1\", Y0)\n            .attr(\"x2\", X1s)\n            .attr(\"y2\", Y1s)\n            .attr(\"stroke\", stroke)\n            .attr(\"stroke-width\", width)\n            .attr(\"stroke-linecap\", \"round\");\n        }\n\n        // ----- half-arc at parent radius (parent.angle → child.angle) -----\n        const a = arcByChild.get(cur.thisId);\n        if (a) {\n          arcLayer\n            .append(\"path\")\n            .attr(\"d\", (d) =>\n              d.sweep == null\n                ? lw.describeArc(\n                  centerX,\n                  centerY,\n                  radiusPx(d.radius),\n                  d.start,\n                  d.end\n                )\n                : lw.describeArcSweep(\n                  centerX,\n                  centerY,\n                  radiusPx(d.radius),\n                  d.start,\n                  d.end,\n                  d.sweep\n                )\n            )\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", stroke)\n            .attr(\"stroke-width\", width);\n        }\n\n        first = false;\n        cur = byId.get(cur.parentId);\n      }\n    }\n\n    // tip dot hover\n    tipDots\n      .on(\"mouseenter\", function(_event, d) {\n        drawRadialPath(d, hoverLines, hoverArcs, hoverStroke, hoverWidth);\n        d3.select(this).attr(\"r\", DOT_R + 2);\n      })\n      .on(\"mouseleave\", function() {\n        hoverLines.selectAll(\"*\").remove();\n        hoverArcs.selectAll(\"*\").remove();\n        d3.select(this).attr(\"r\", DOT_R);\n      });\n\n    if (highlightTips && highlightTips.length) {\n      const chosen = new Set(\n        [\n          ...highlightTips.filter(isNumber).map((id) => tipById.get(id)),\n          ...highlightTips\n            .filter((x) => !isNumber(x))\n            .map((lb) => tipByLabel.get(lb))\n        ].filter(Boolean)\n      );\n\n      chosen.forEach((tip) => {\n        drawRadialPath(\n          tip.thisId,\n          staticLines,\n          staticArcs,\n          highlightStroke,\n          highlightWidth\n        );\n      });\n    }\n\n    return svg.node();\n  } else if (layout === \"unrooted\") {\n    // UNROOTED LAYOUT\n    const parsedTree = lw.readTree(treeText);\n    const unrootedPhylo = lw.unrooted(parsedTree);\n\n    const w = width;\n    const h = height;\n\n    const xExtent = d3.extent(unrootedPhylo.data, (d) => d.x);\n    const yExtent = d3.extent(unrootedPhylo.data, (d) => d.y);\n    const maxX = Math.max(Math.abs(xExtent[0]), Math.abs(xExtent[1]));\n    const maxY = Math.max(Math.abs(yExtent[0]), Math.abs(yExtent[1]));\n    const maxRadius = Math.max(maxX, maxY);\n    const scaleUnroot = maxRadius + 2 * radialMargin;\n\n    const xScaleUnroot = d3\n      .scaleLinear()\n      .domain([-scaleUnroot, scaleUnroot])\n      .range([0, w]);\n    const yScaleUnroot = d3\n      .scaleLinear()\n      .domain([-scaleUnroot, scaleUnroot])\n      .range([h, 0]);\n\n    const svg = d3\n      .create(\"svg\")\n      .attr(\"width\", w)\n      .attr(\"height\", h)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10);\n\n    const group = svg.append(\"g\");\n    const staticLayer = svg.append(\"g\").attr(\"class\", \"phylo_static_highlight\");\n    const hoverLayer = svg.append(\"g\").attr(\"class\", \"phylo_hover_highlight\");\n\n    group\n      .append(\"g\")\n      .attr(\"class\", \"phylo_lines\")\n      .selectAll(\"line\")\n      .data(unrootedPhylo.edges)\n      .join(\"line\")\n      .attr(\"x1\", (d) => xScaleUnroot(d.x1))\n      .attr(\"y1\", (d) => yScaleUnroot(d.y1))\n      .attr(\"x2\", (d) => xScaleUnroot(d.x2))\n      .attr(\"y2\", (d) => yScaleUnroot(d.y2))\n      .attr(\"stroke-width\", strokeWidth)\n      .attr(\"stroke\", \"#777\");\n\n    const nodes = group\n      .append(\"g\")\n      .attr(\"class\", \"phylo_points\")\n      .selectAll(\"circle\")\n      .data(unrootedPhylo.data)\n      .join(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", (d) => (d.isTip ? 4 : 0))\n      .attr(\"cx\", (d) => xScaleUnroot(d.x))\n      .attr(\"cy\", (d) => yScaleUnroot(d.y))\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"fill\", (d) => (d.isTip ? \"black\" : \"white\"));\n\n    const byId = new Map(unrootedPhylo.data.map((d) => [d.thisId, d]));\n    const tipById = new Map(\n      unrootedPhylo.data.filter((d) => d.isTip).map((d) => [d.thisId, d])\n    );\n    const tipByLabel = new Map(\n      unrootedPhylo.data.filter((d) => d.isTip).map((d) => [d.thisLabel, d])\n    );\n    const rootToTip = makeRootToTipGetter(byId);\n\n    if (showTooltips) {\n      nodes\n        .filter((d) => d.isTip)\n        .append(\"title\")\n        .text((d) => tooltipFormatter(d, rootToTip(d.thisId)));\n    }\n\n    const tipEdges = new Map();\n    const nodesById = new Map(unrootedPhylo.data.map((d) => [d.thisId, d]));\n    unrootedPhylo.edges.forEach((edge) => {\n      const tipNode = nodesById.get(edge.id1);\n      if (tipNode?.isTip) tipEdges.set(edge.id1, edge);\n    });\n\n    if (tipLabels) {\n      const tipLabelsSel = group\n        .append(\"g\")\n        .attr(\"class\", \"phylo_labels\")\n        .selectAll(\"g\")\n        .data(unrootedPhylo.data.filter((d) => d.isTip))\n        .join(\"g\")\n        .attr(\"transform\", (d) => {\n          const x = xScaleUnroot(d.x);\n          const y = yScaleUnroot(d.y);\n          return `translate(${x},${y})`;\n        })\n        .each(function(d) {\n          const edge = tipEdges.get(d.thisId);\n          if (!edge) return;\n\n          const x1 = xScaleUnroot(edge.x1);\n          const y1 = yScaleUnroot(edge.y1);\n          const x2 = xScaleUnroot(edge.x2);\n          const y2 = yScaleUnroot(edge.y2);\n\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          let angle = (Math.atan2(dy, dx) * 180) / Math.PI;\n\n          let xOffset = -10;\n          let anchor = \"end\";\n          if (angle > 90 || angle < -90) {\n            angle += 180;\n            anchor = \"start\";\n            xOffset = 10;\n          }\n\n          d3.select(this)\n            .append(\"g\")\n            .attr(\"transform\", `rotate(${angle})`)\n            .append(\"text\")\n            .attr(\"x\", xOffset)\n            .attr(\"alignment-baseline\", \"middle\")\n            .attr(\"text-anchor\", anchor)\n            .attr(\"font-size\", 10)\n            .attr(\"fill\", \"black\")\n            .text(d.thisLabel?.replace(/_/g, \" \") ?? \"\");\n        });\n\n      if (showTooltips) {\n        tipLabelsSel\n          .append(\"title\")\n          .text((d) => tooltipFormatter(d, rootToTip(d.thisId)));\n      }\n\n      tipLabelsSel\n        .on(\"mouseenter\", function(_event, d) {\n          drawUnrootedPath(d.thisId, hoverLayer, hoverStroke, hoverWidth);\n          d3.select(this).select(\"text\").attr(\"font-weight\", 600);\n        })\n        .on(\"mouseleave\", function() {\n          hoverLayer.selectAll(\"*\").remove();\n          d3.select(this).select(\"text\").attr(\"font-weight\", null);\n        });\n    }\n\n    nodes\n      .filter((d) => d.isTip)\n      .on(\"mouseenter\", function(_event, d) {\n        drawUnrootedPath(d.thisId, hoverLayer, hoverStroke, hoverWidth);\n        d3.select(this).attr(\"r\", 6);\n      })\n      .on(\"mouseleave\", function() {\n        hoverLayer.selectAll(\"*\").remove();\n        d3.select(this).attr(\"r\", 4);\n      });\n\n    if (highlightTips && highlightTips.length) {\n      const chosen = new Set(\n        [\n          ...highlightTips.filter(isNumber).map((id) => tipById.get(id)),\n          ...highlightTips\n            .filter((x) => !isNumber(x))\n            .map((lb) => tipByLabel.get(lb))\n        ].filter(Boolean)\n      );\n      chosen.forEach((tip) => {\n        drawUnrootedPath(\n          tip.thisId,\n          staticLayer,\n          highlightStroke,\n          highlightWidth\n        );\n      });\n    }\n\n    function drawUnrootedPath(tipId, layer, stroke, width) {\n      const edgeFromChild = new Map(unrootedPhylo.edges.map((e) => [e.id1, e]));\n      layer.selectAll(\"*\").remove();\n      let cur = byId.get(tipId);\n      while (cur && cur.parentId != null) {\n        const e = edgeFromChild.get(cur.thisId);\n        if (e) {\n          layer\n            .append(\"line\")\n            .attr(\"x1\", xScaleUnroot(e.x1))\n            .attr(\"y1\", yScaleUnroot(e.y1))\n            .attr(\"x2\", xScaleUnroot(e.x2))\n            .attr(\"y2\", yScaleUnroot(e.y2))\n            .attr(\"stroke\", stroke)\n            .attr(\"stroke-width\", width)\n            .attr(\"stroke-linecap\", \"round\");\n        }\n        cur = byId.get(cur.parentId);\n      }\n    }\n\n    return svg.node();\n  } else {\n    throw new Error(\n      \"Unsupported layout type. Use 'rect', 'radial', or 'unrooted'.\"\n    );\n  }\n}\n"],"names":["TAU","norm","lw.rectangleLayout","lw.readTree","lw.radialLayout","lw.describeArc","lw.describeArcSweep","lw.unrooted"],"mappings":"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"}
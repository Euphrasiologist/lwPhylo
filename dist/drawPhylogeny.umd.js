!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("d3")):"function"==typeof define&&define.amd?define(["d3"],n):(t="undefined"!=typeof globalThis?globalThis:t||self).lwPhyloPlot=n(t.d3)}(this,function(t){"use strict";function n(t){var n=Object.create(null);return t&&Object.keys(t).forEach(function(e){if("default"!==e){var a=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,a.get?a:{enumerable:!0,get:function(){return t[e]}})}}),n.default=t,Object.freeze(n)}var e=n(t);function a(t,n,e,a){return{x:t+e*Math.cos(a),y:n-e*Math.sin(a)}}function r(t,n=[]){n.push(t);for(let e=0;e<(t.children?.length||0);e++)n=r(t.children[e],n);return n}function i(t,n=!0){var e=[];for(const n of r(t))null===n.parent?e.push({parentId:null,parentLabel:null,thisId:n.id,thisLabel:n.label,children:n.children.map(t=>t.id),branchLength:0,isTip:!1,x:n.x,y:n.y,angle:n.angle}):e.push({parentId:n.parent.id,parentLabel:n.parent.label,thisId:n.id,thisLabel:n.label,children:n.children.map(t=>t.id),branchLength:n.branchLength,isTip:0==n.children.length,x:n.x,y:n.y,angle:n.angle});return n&&(e=e.sort(function(t,n){return t.thisId-n.thisId})),e}function s(t){const n=2*Math.PI,e=i(t,!0),a=new Map(e.map(t=>[t.thisId,t])),r=new Map(e.map(t=>[t.thisId,t.children||[]]));let s=null;for(const t of e)if(null==t.parentId){s=t.thisId;break}const l=[];!function t(n){const e=r.get(n)||[];if(0!==e.length)for(const n of e)t(n);else l.push(n)}(s);const o=Math.max(1,l.length),c=new Map;l.forEach((t,e)=>{c.set(t,e/o*n)}),function t(e){const a=r.get(e)||[];for(const n of a)t(n);if(a.length>0){let t=0,r=0;for(const n of a){const e=c.get(n);t+=Math.cos(e),r+=Math.sin(e)}c.set(e,(Math.atan2(r,t)%n+n)%n)}}(s);const h=new Map;h.set(s,0),function t(n){const e=r.get(n)||[],i=h.get(n)||0;for(const n of e){const e=a.get(n),r=e?.branchLength??0;h.set(n,i+r),t(n)}}(s);for(const t of e){const n=c.get(t.thisId)??0,e=h.get(t.thisId)??0;t.angle=n,t.r=e,t.x=e*Math.cos(n),t.y=e*Math.sin(n)}return e}function l(t){const n={};return n.data=s(t),n.radii=function(t){const n=s(t),e=new Map(n.map(t=>[t.thisId,t])),a=n.find(t=>null==t.parentId)?.thisId,r=[];for(const t of n){if(t.thisId===a)continue;const n=e.get(t.parentId);if(!n)continue;const i=t.angle,s=n.r,l=t.r;r.push({parentId:n.thisId,childId:t.thisId,x0:s*Math.cos(i),y0:s*Math.sin(i),x1:l*Math.cos(i),y1:l*Math.sin(i),isTip:!!t.isTip})}return r}(t),n.arcs=function(t){const n=2*Math.PI;new Map(t.map(t=>[t.thisId,t]));const e=new Map;let a=null;for(const n of t)null==n.parentId&&(a=n.thisId),e.has(n.parentId)||e.set(n.parentId,[]),e.get(n.parentId).push(n);const r=[];for(const i of t){const t=i.thisId;if(t===a)continue;const s=e.get(t)||[];if(s.length<2)continue;const l=s.map(t=>(t.angle%n+n)%n).sort((t,n)=>t-n),o=l[0],c=l[l.length-1],h=c-o,d=n-h;let p,f,u;h<=d?(p=o,f=c,u=h):(p=c,f=o,u=d),u<1e-6||!isFinite(i.r)||i.r<=0||r.push({start:p,end:f,radius:i.r,thisId:t,parentId:i.parentId})}return r}(n.data),n}function o(t){const n=i(t),e=new Map(n.map((t,n)=>[t.thisId,n])),a=[];!function t(n){n.children&&0!==n.children.length?n.children.forEach(t):a.push(n.id)}(t);const r=new Map(a.map((t,n)=>[t,n+1]));return function t(a){const i=e.get(a.id);if(!a.children||0===a.children.length){const t=r.get(a.id);return n[i].y0=t,n[i].y1=t,t}const s=function(t){let n=0,e=0;for(let a of t)null!=a&&(a=+a)>=a&&(++n,e+=a);if(n)return e/n}(a.children.map(t));return n[i].y0=s,n[i].y1=s,s}(t),function t(a,r){const i=e.get(a.id),s=r??0,l=s+(n[i].branchLength??0);n[i].x0=s,n[i].x1=l,a.children&&a.children.length&&a.children.forEach(n=>t(n,l))}(t,0),n.map(t=>{const{y:n,x:e,angle:a,...r}=t;return r})}function c(t){const n=o(t),e=function(t){const n=o(t),e=new Map;for(const t of n){if(null==t.parentId)continue;const n=e.get(t.parentId);n?n.push(t):e.set(t.parentId,[t])}const a=[];for(const[t,n]of e.entries()){if(!n.length)continue;const e=n.map(t=>t.y0),r=Math.min(...e),i=Math.max(...e),s=n[0].x0;a.push({parentId:t,x0:s,x1:s,y0:r,y1:i,heights:i-r})}return a}(t),a=function(t){const n=o(t),e=new Map(n.map(t=>[t.thisId,t])),a=[];for(const t of n){if(null==t.parentId)continue;const n=e.get(t.parentId);if(!n)continue;const r=t.x0,i=t.y0,s=n.y0,l=Math.min(i,s),o=Math.max(i,s);a.push({parentId:t.parentId,childId:t.thisId,x:r,y0:l,y1:o})}return a}(t);new Map(n.map(t=>[t.thisId,t]));const r=n.filter(t=>null!=t.parentId).map(t=>({parentId:t.parentId,childId:t.thisId,thisId:t.thisId,thisLabel:t.thisLabel,isTip:t.isTip,x0:t.x0,x1:t.x1,y0:t.y0,y1:t.y0}));return{data:n,vertical_lines:e,child_vertical_lines:a,horizontal_lines:r}}function h(t){null===t.parent&&(function t(n){if(!n.children||0===n.children.length)return n.ntips=1,1;let e=0;for(const a of n.children)e+=t(a);return n.ntips=e,e}(t),t.start=0,t.end=2,t.angle=0,t.ntips=function(t){var n=0;for(const e of function(t){const n=[t],e=[];for(;n.length;){const t=n.shift();e.push(t);for(const e of t.children)n.push(e)}return e}(t))0==e.children.length&&n++;return n}(t),t.x=0,t.y=0);let n=t.start;for(let e=0;e<t.children.length;e++){const a=t.children[e],r=(t.end-t.start)*(a.ntips/t.ntips);a.start=n,a.end=n+r,a.angle=a.start+(a.end-a.start)/2,n=a.end;const i=a.angle*Math.PI,s=a.branchLength??0;a.x=t.x+s*Math.sin(i),a.y=t.y+s*Math.cos(i),h(a)}return t}function d(t){var n={},e=i(h(t));return n.data=e,n.edges=function(t,n=!1){const e=[...t].sort((t,n)=>t.thisId-n.thisId),a=new Map(e.map(t=>[t.thisId,t])),r=[];for(const t of e){if(null==t.parentId)continue;const e=a.get(t.parentId);e&&(n?(r.push({x1:t.x,y1:t.y,id1:t.thisId,x2:e.x,y2:t.y,id2:void 0}),r.push({x1:e.x,y1:t.y,id1:void 0,x2:e.x,y2:e.y,id2:t.parentId})):r.push({x1:t.x,y1:t.y,id1:t.thisId,x2:e.x,y2:e.y,id2:t.parentId}))}return r}(e),n}function p(t){const n=(t=String(t).replace(/\s+/g,"")).split(/(;|\(|\)|,)/),e={parent:null,children:[]};let a=e,r=0;for(const t of n)if(t&&";"!==t)if("("===t){const t={parent:a,children:[]};a.children.push(t),a=t}else if(","===t){a=a.parent;const t={parent:a,children:[]};a.children.push(t),a=t}else if(")"===t){if(a=a.parent,null===a)break}else{const n=t.split(":");1===n.length?t.startsWith(":")?(a.label="",a.branchLength=parseFloat(n[0])):(a.label=n[0],a.branchLength=null):2===n.length?(a.label=n[0],a.branchLength=parseFloat(n[1])):(console.warn(t,"Unhandled token with multiple ':' characters"),a.label=n[0]||"",a.branchLength=parseFloat(n[n.length-1])),a.id=r++}return null==e.id&&(e.id=r),e}return function(t,{layout:n="rect",width:r=800,height:i=800,margin:s={top:20,right:300,bottom:20,left:50},radialMargin:o=80,strokeWidth:h=1,radialMode:f="outer"}={}){if("rect"===n){const u=c(p(t)),g=u.horizontal_lines,y=u.vertical_lines,x=g.filter(t=>t.isTip),I=e.max(g,t=>t.y1),M=e.min(g,t=>t.y1),m=e.max(g,t=>t.x1),b=e.scaleLinear().domain([M-1,I+1]).range([s.top,i-s.bottom]),w=e.scaleLinear().domain([0,m]).range([s.left,r-s.right]),k=e.create("svg").attr("width",r).attr("height",i).attr("font-family","sans-serif").attr("font-size",10),L=k.append("g");return L.selectAll(".hline").data(g).join("line").attr("x1",t=>w(t.x0)).attr("y1",t=>b(t.y0)).attr("x2",t=>w(t.x1)).attr("y2",t=>b(t.y1)).attr("stroke","#555").attr("stroke-width",h),L.selectAll(".vline").data(y).join("line").attr("x1",t=>w(t.x0)).attr("y1",t=>b(t.y0)).attr("x2",t=>w(t.x1)).attr("y2",t=>b(t.y1)).attr("stroke","#555").attr("stroke-width",h),L.selectAll(".tip-dot").data(x).join("circle").attr("cx",t=>w(t.x1)).attr("cy",t=>b(t.y1)).attr("r",2).attr("fill","black"),k.append("g").selectAll("text").data(x).join("text").attr("x",t=>w(t.x1)+4).attr("y",t=>b(t.y1)).attr("dy","0.32em").attr("font-size",10).text(t=>t.thisLabel?.replace(/_/g," ")??""),k.node()}if("radial"===n){const j=l(p(t)),v="outer"===f,_=3,T=0,$=(e.max(j.data,t=>t.r)??0)+2*o,P=r,A=i,z=P/2,E=A/2,O=e.scaleLinear().domain([-$,$]).range([0,P]),F=e.scaleLinear().domain([-$,$]).range([A,0]),X=t=>t*(P/(2*$)),Y=new Map(j.data.map(t=>[t.thisId,t])),U=j.data.filter(t=>t.isTip),W=U.length?e.max(U,t=>t.r):0;function q(t,n,e,a){const r=O(t),i=F(n),s=O(e)-r,l=F(a)-i,o=Math.hypot(s,l)||1,c=Math.max(0,(o-T)/o);return{X0:r,Y0:i,X1s:r+s*c,Y1s:i+l*c,len:o}}const D=e.create("svg").attr("width",P).attr("height",A).attr("font-family","sans-serif").attr("font-size",10),N=D.append("g");return N.append("g").attr("class","phylo_arcs").selectAll("path").data(j.arcs).join("path").attr("d",t=>function(t,n,e,r,i){const s=2*Math.PI,l=t=>(t%s+s)%s;let o=l(r),c=l(i);if((o-c+s)%s<(c-o+s)%s){const t=o;o=c,c=t}const h=(c-o+s)%s;if(h<1e-9){const r=a(t,n,e,o);return`M ${r.x} ${r.y}`}const d=h>Math.PI?1:0,p=a(t,n,e,o),f=a(t,n,e,c);return`M ${p.x} ${p.y} A ${e} ${e} 0 ${d} 0 ${f.x} ${f.y}`}(z,E,Math.max(0,X(t.radius)),t.start,t.end)).attr("fill","none").attr("stroke","#777").attr("stroke-width",h),N.append("g").attr("class","phylo_radii").selectAll("line").data(j.radii).join("line").each(function(t,n){const a=t.x0,r=t.y0,i=(s=t).childId??s.thisId??s.id1??null;var s;const l=null!=i?Y.get(i):void 0,o=!(!l||!l.isTip);let c=t.x1,d=t.y1;v&&o&&(c=W*Math.cos(l.angle),d=W*Math.sin(l.angle),reason="outerâ†’projected tip");const{X0:p,Y0:f,X1s:u,Y1s:g}=q(a,r,c,d);e.select(this).attr("x1",p).attr("y1",f).attr("x2",u).attr("y2",g).attr("stroke","#777").attr("stroke-width",h)}),N.append("g").attr("class","phylo_tip_dots").selectAll("circle").data(U).join("circle").each(function(t,n){const a=v?W*Math.cos(t.angle):t.x,r=v?W*Math.sin(t.angle):t.y;e.select(this).attr("cx",O(a)).attr("cy",F(r)).attr("r",_).attr("fill","black").attr("stroke","black").attr("stroke-width",1.5)}),N.append("g").attr("class","phylo_labels").selectAll("g.label").data(U).join("g").attr("class","label").attr("transform",t=>{const n=v?W:t.r,e=n*Math.cos(t.angle),a=n*Math.sin(t.angle);return`translate(${O(e)},${F(a)})`}).each(function(t){let n=180*-t.angle/Math.PI,a=10,r="start";t.angle>Math.PI/2&&t.angle<3*Math.PI/2&&(n+=180,a*=-1,r="end"),e.select(this).append("g").attr("transform",`rotate(${n})`).append("text").attr("x",a).attr("alignment-baseline","middle").attr("text-anchor",r).attr("font-size",10).attr("fill","black").text(t=>t.thisLabel?.replace(/_/g," ")??"")}),D.node()}if("unrooted"===n){const S=d(p(t)),B=r,C=i,G=e.extent(S.data,t=>t.x),H=e.extent(S.data,t=>t.y),J=Math.max(Math.abs(G[0]),Math.abs(G[1])),K=Math.max(Math.abs(H[0]),Math.abs(H[1])),Q=Math.max(J,K)+2*o,R=e.scaleLinear().domain([-Q,Q]).range([0,B]),V=e.scaleLinear().domain([-Q,Q]).range([C,0]),Z=e.create("svg").attr("width",B).attr("height",C).attr("font-family","sans-serif").attr("font-size",10),tt=Z.append("g");tt.append("g").attr("class","phylo_lines").selectAll("line").data(S.edges).join("line").attr("x1",t=>R(t.x1)).attr("y1",t=>V(t.y1)).attr("x2",t=>R(t.x2)).attr("y2",t=>V(t.y2)).attr("stroke-width",h).attr("stroke","#777"),tt.append("g").attr("class","phylo_points").selectAll("circle").data(S.data).join("circle").attr("class","dot").attr("r",t=>t.isTip?4:0).attr("cx",t=>R(t.x)).attr("cy",t=>V(t.y)).attr("stroke","black").attr("stroke-width",2).attr("fill",t=>t.isTip?"black":"white");const nt=new Map,et=new Map(S.data.map(t=>[t.thisId,t]));return S.edges.forEach(t=>{const n=et.get(t.id1);n?.isTip&&nt.set(t.id1,t)}),tt.append("g").attr("class","phylo_labels").selectAll("g").data(S.data.filter(t=>t.isTip)).join("g").attr("transform",t=>`translate(${R(t.x)},${V(t.y)})`).each(function(t){const n=nt.get(t.thisId);if(!n)return void console.warn("No incoming edge found for tip node:",t.thisId,t.thisLabel);const a=R(n.x1),r=V(n.y1),i=R(n.x2)-a,s=V(n.y2)-r;let l=180*Math.atan2(s,i)/Math.PI,o=-10,c="end";(l>90||l<-90)&&(l+=180,c="start",o=10),e.select(this).append("g").attr("transform",`rotate(${l})`).append("text").attr("x",o).attr("alignment-baseline","middle").attr("text-anchor",c).attr("font-size",10).attr("fill","black").text(t.thisLabel?.replace(/_/g," ")??"")}),Z.node()}throw new Error("Unsupported layout type. Use 'rect' or 'radial'.")}});
//# sourceMappingURL=drawPhylogeny.umd.js.map
